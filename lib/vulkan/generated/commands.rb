# vulkan-ruby 1.3.207.1
#
#   => https://github.com/sinisterchipmunk/vulkan-ruby
#
# [NOTICE] This is an automatically generated file.

module Vulkan
  register_function "VkResult vkCreateInstance"                                                 , "const VkInstanceCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkInstance* pInstance"
  register_function "void vkDestroyInstance"                                                    , "VkInstance instance, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkEnumeratePhysicalDevices"                                       , "VkInstance instance, uint32_t* pPhysicalDeviceCount, VkPhysicalDevice* pPhysicalDevices"
  register_function "PFN_vkVoidFunction vkGetDeviceProcAddr"                                    , "VkDevice device, const char* pName"
  register_function "void vkGetPhysicalDeviceProperties"                                        , "VkPhysicalDevice physicalDevice, VkPhysicalDeviceProperties* pProperties"
  register_function "void vkGetPhysicalDeviceQueueFamilyProperties"                             , "VkPhysicalDevice physicalDevice, uint32_t* pQueueFamilyPropertyCount, VkQueueFamilyProperties* pQueueFamilyProperties"
  register_function "void vkGetPhysicalDeviceMemoryProperties"                                  , "VkPhysicalDevice physicalDevice, VkPhysicalDeviceMemoryProperties* pMemoryProperties"
  register_function "void vkGetPhysicalDeviceFeatures"                                          , "VkPhysicalDevice physicalDevice, VkPhysicalDeviceFeatures* pFeatures"
  register_function "void vkGetPhysicalDeviceFormatProperties"                                  , "VkPhysicalDevice physicalDevice, VkFormat format, VkFormatProperties* pFormatProperties"
  register_function "VkResult vkGetPhysicalDeviceImageFormatProperties"                         , "VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkImageTiling tiling, VkImageUsageFlags usage, VkImageCreateFlags flags, VkImageFormatProperties* pImageFormatProperties"
  register_function "VkResult vkCreateDevice"                                                   , "VkPhysicalDevice physicalDevice, const VkDeviceCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDevice* pDevice"
  register_function "void vkDestroyDevice"                                                      , "VkDevice device, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkEnumerateInstanceVersion"                                       , "uint32_t* pApiVersion"
  register_function "VkResult vkEnumerateInstanceLayerProperties"                               , "uint32_t* pPropertyCount, VkLayerProperties* pProperties"
  register_function "VkResult vkEnumerateInstanceExtensionProperties"                           , "const char* pLayerName, uint32_t* pPropertyCount, VkExtensionProperties* pProperties"
  register_function "VkResult vkEnumerateDeviceLayerProperties"                                 , "VkPhysicalDevice physicalDevice, uint32_t* pPropertyCount, VkLayerProperties* pProperties"
  register_function "VkResult vkEnumerateDeviceExtensionProperties"                             , "VkPhysicalDevice physicalDevice, const char* pLayerName, uint32_t* pPropertyCount, VkExtensionProperties* pProperties"
  register_function "void vkGetDeviceQueue"                                                     , "VkDevice device, uint32_t queueFamilyIndex, uint32_t queueIndex, VkQueue* pQueue"
  register_function "VkResult vkQueueSubmit"                                                    , "VkQueue queue, uint32_t submitCount, const VkSubmitInfo* pSubmits, VkFence fence"
  register_function "VkResult vkQueueWaitIdle"                                                  , "VkQueue queue"
  register_function "VkResult vkDeviceWaitIdle"                                                 , "VkDevice device"
  register_function "VkResult vkAllocateMemory"                                                 , "VkDevice device, const VkMemoryAllocateInfo* pAllocateInfo, const VkAllocationCallbacks* pAllocator, VkDeviceMemory* pMemory"
  register_function "void vkFreeMemory"                                                         , "VkDevice device, VkDeviceMemory memory, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkMapMemory"                                                      , "VkDevice device, VkDeviceMemory memory, VkDeviceSize offset, VkDeviceSize size, VkMemoryMapFlags flags, void** ppData"
  register_function "void vkUnmapMemory"                                                        , "VkDevice device, VkDeviceMemory memory"
  register_function "VkResult vkFlushMappedMemoryRanges"                                        , "VkDevice device, uint32_t memoryRangeCount, const VkMappedMemoryRange* pMemoryRanges"
  register_function "VkResult vkInvalidateMappedMemoryRanges"                                   , "VkDevice device, uint32_t memoryRangeCount, const VkMappedMemoryRange* pMemoryRanges"
  register_function "void vkGetDeviceMemoryCommitment"                                          , "VkDevice device, VkDeviceMemory memory, VkDeviceSize* pCommittedMemoryInBytes"
  register_function "void vkGetBufferMemoryRequirements"                                        , "VkDevice device, VkBuffer buffer, VkMemoryRequirements* pMemoryRequirements"
  register_function "VkResult vkBindBufferMemory"                                               , "VkDevice device, VkBuffer buffer, VkDeviceMemory memory, VkDeviceSize memoryOffset"
  register_function "void vkGetImageMemoryRequirements"                                         , "VkDevice device, VkImage image, VkMemoryRequirements* pMemoryRequirements"
  register_function "VkResult vkBindImageMemory"                                                , "VkDevice device, VkImage image, VkDeviceMemory memory, VkDeviceSize memoryOffset"
  register_function "void vkGetImageSparseMemoryRequirements"                                   , "VkDevice device, VkImage image, uint32_t* pSparseMemoryRequirementCount, VkSparseImageMemoryRequirements* pSparseMemoryRequirements"
  register_function "void vkGetPhysicalDeviceSparseImageFormatProperties"                       , "VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkSampleCountFlagBits samples, VkImageUsageFlags usage, VkImageTiling tiling, uint32_t* pPropertyCount, VkSparseImageFormatProperties* pProperties"
  register_function "VkResult vkQueueBindSparse"                                                , "VkQueue queue, uint32_t bindInfoCount, const VkBindSparseInfo* pBindInfo, VkFence fence"
  register_function "VkResult vkCreateFence"                                                    , "VkDevice device, const VkFenceCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkFence* pFence"
  register_function "void vkDestroyFence"                                                       , "VkDevice device, VkFence fence, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkResetFences"                                                    , "VkDevice device, uint32_t fenceCount, const VkFence* pFences"
  register_function "VkResult vkGetFenceStatus"                                                 , "VkDevice device, VkFence fence"
  register_function "VkResult vkWaitForFences"                                                  , "VkDevice device, uint32_t fenceCount, const VkFence* pFences, VkBool32 waitAll, uint64_t timeout"
  register_function "VkResult vkCreateSemaphore"                                                , "VkDevice device, const VkSemaphoreCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSemaphore* pSemaphore"
  register_function "void vkDestroySemaphore"                                                   , "VkDevice device, VkSemaphore semaphore, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkCreateEvent"                                                    , "VkDevice device, const VkEventCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkEvent* pEvent"
  register_function "void vkDestroyEvent"                                                       , "VkDevice device, VkEvent event, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkGetEventStatus"                                                 , "VkDevice device, VkEvent event"
  register_function "VkResult vkSetEvent"                                                       , "VkDevice device, VkEvent event"
  register_function "VkResult vkResetEvent"                                                     , "VkDevice device, VkEvent event"
  register_function "VkResult vkCreateQueryPool"                                                , "VkDevice device, const VkQueryPoolCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkQueryPool* pQueryPool"
  register_function "void vkDestroyQueryPool"                                                   , "VkDevice device, VkQueryPool queryPool, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkGetQueryPoolResults"                                            , "VkDevice device, VkQueryPool queryPool, uint32_t firstQuery, uint32_t queryCount, size_t dataSize, void* pData, VkDeviceSize stride, VkQueryResultFlags flags"
  register_function "void vkResetQueryPool"                                                     , "VkDevice device, VkQueryPool queryPool, uint32_t firstQuery, uint32_t queryCount"
  register_function "VkResult vkCreateBuffer"                                                   , "VkDevice device, const VkBufferCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkBuffer* pBuffer"
  register_function "void vkDestroyBuffer"                                                      , "VkDevice device, VkBuffer buffer, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkCreateBufferView"                                               , "VkDevice device, const VkBufferViewCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkBufferView* pView"
  register_function "void vkDestroyBufferView"                                                  , "VkDevice device, VkBufferView bufferView, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkCreateImage"                                                    , "VkDevice device, const VkImageCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkImage* pImage"
  register_function "void vkDestroyImage"                                                       , "VkDevice device, VkImage image, const VkAllocationCallbacks* pAllocator"
  register_function "void vkGetImageSubresourceLayout"                                          , "VkDevice device, VkImage image, const VkImageSubresource* pSubresource, VkSubresourceLayout* pLayout"
  register_function "VkResult vkCreateImageView"                                                , "VkDevice device, const VkImageViewCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkImageView* pView"
  register_function "void vkDestroyImageView"                                                   , "VkDevice device, VkImageView imageView, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkCreateShaderModule"                                             , "VkDevice device, const VkShaderModuleCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkShaderModule* pShaderModule"
  register_function "void vkDestroyShaderModule"                                                , "VkDevice device, VkShaderModule shaderModule, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkCreatePipelineCache"                                            , "VkDevice device, const VkPipelineCacheCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkPipelineCache* pPipelineCache"
  register_function "void vkDestroyPipelineCache"                                               , "VkDevice device, VkPipelineCache pipelineCache, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkGetPipelineCacheData"                                           , "VkDevice device, VkPipelineCache pipelineCache, size_t* pDataSize, void* pData"
  register_function "VkResult vkMergePipelineCaches"                                            , "VkDevice device, VkPipelineCache dstCache, uint32_t srcCacheCount, const VkPipelineCache* pSrcCaches"
  register_function "VkResult vkCreateGraphicsPipelines"                                        , "VkDevice device, VkPipelineCache pipelineCache, uint32_t createInfoCount, const VkGraphicsPipelineCreateInfo* pCreateInfos, const VkAllocationCallbacks* pAllocator, VkPipeline* pPipelines"
  register_function "VkResult vkCreateComputePipelines"                                         , "VkDevice device, VkPipelineCache pipelineCache, uint32_t createInfoCount, const VkComputePipelineCreateInfo* pCreateInfos, const VkAllocationCallbacks* pAllocator, VkPipeline* pPipelines"
  register_function "VkResult vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI"                  , "VkDevice device, VkRenderPass renderpass, VkExtent2D* pMaxWorkgroupSize"
  register_function "void vkDestroyPipeline"                                                    , "VkDevice device, VkPipeline pipeline, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkCreatePipelineLayout"                                           , "VkDevice device, const VkPipelineLayoutCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkPipelineLayout* pPipelineLayout"
  register_function "void vkDestroyPipelineLayout"                                              , "VkDevice device, VkPipelineLayout pipelineLayout, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkCreateSampler"                                                  , "VkDevice device, const VkSamplerCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSampler* pSampler"
  register_function "void vkDestroySampler"                                                     , "VkDevice device, VkSampler sampler, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkCreateDescriptorSetLayout"                                      , "VkDevice device, const VkDescriptorSetLayoutCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDescriptorSetLayout* pSetLayout"
  register_function "void vkDestroyDescriptorSetLayout"                                         , "VkDevice device, VkDescriptorSetLayout descriptorSetLayout, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkCreateDescriptorPool"                                           , "VkDevice device, const VkDescriptorPoolCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDescriptorPool* pDescriptorPool"
  register_function "void vkDestroyDescriptorPool"                                              , "VkDevice device, VkDescriptorPool descriptorPool, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkResetDescriptorPool"                                            , "VkDevice device, VkDescriptorPool descriptorPool, VkDescriptorPoolResetFlags flags"
  register_function "VkResult vkAllocateDescriptorSets"                                         , "VkDevice device, const VkDescriptorSetAllocateInfo* pAllocateInfo, VkDescriptorSet* pDescriptorSets"
  register_function "VkResult vkFreeDescriptorSets"                                             , "VkDevice device, VkDescriptorPool descriptorPool, uint32_t descriptorSetCount, const VkDescriptorSet* pDescriptorSets"
  register_function "void vkUpdateDescriptorSets"                                               , "VkDevice device, uint32_t descriptorWriteCount, const VkWriteDescriptorSet* pDescriptorWrites, uint32_t descriptorCopyCount, const VkCopyDescriptorSet* pDescriptorCopies"
  register_function "VkResult vkCreateFramebuffer"                                              , "VkDevice device, const VkFramebufferCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkFramebuffer* pFramebuffer"
  register_function "void vkDestroyFramebuffer"                                                 , "VkDevice device, VkFramebuffer framebuffer, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkCreateRenderPass"                                               , "VkDevice device, const VkRenderPassCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkRenderPass* pRenderPass"
  register_function "void vkDestroyRenderPass"                                                  , "VkDevice device, VkRenderPass renderPass, const VkAllocationCallbacks* pAllocator"
  register_function "void vkGetRenderAreaGranularity"                                           , "VkDevice device, VkRenderPass renderPass, VkExtent2D* pGranularity"
  register_function "VkResult vkCreateCommandPool"                                              , "VkDevice device, const VkCommandPoolCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkCommandPool* pCommandPool"
  register_function "void vkDestroyCommandPool"                                                 , "VkDevice device, VkCommandPool commandPool, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkResetCommandPool"                                               , "VkDevice device, VkCommandPool commandPool, VkCommandPoolResetFlags flags"
  register_function "VkResult vkAllocateCommandBuffers"                                         , "VkDevice device, const VkCommandBufferAllocateInfo* pAllocateInfo, VkCommandBuffer* pCommandBuffers"
  register_function "void vkFreeCommandBuffers"                                                 , "VkDevice device, VkCommandPool commandPool, uint32_t commandBufferCount, const VkCommandBuffer* pCommandBuffers"
  register_function "VkResult vkBeginCommandBuffer"                                             , "VkCommandBuffer commandBuffer, const VkCommandBufferBeginInfo* pBeginInfo"
  register_function "VkResult vkEndCommandBuffer"                                               , "VkCommandBuffer commandBuffer"
  register_function "VkResult vkResetCommandBuffer"                                             , "VkCommandBuffer commandBuffer, VkCommandBufferResetFlags flags"
  register_function "void vkCmdBindPipeline"                                                    , "VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipeline pipeline"
  register_function "void vkCmdSetViewport"                                                     , "VkCommandBuffer commandBuffer, uint32_t firstViewport, uint32_t viewportCount, const VkViewport* pViewports"
  register_function "void vkCmdSetScissor"                                                      , "VkCommandBuffer commandBuffer, uint32_t firstScissor, uint32_t scissorCount, const VkRect2D* pScissors"
  register_function "void vkCmdSetLineWidth"                                                    , "VkCommandBuffer commandBuffer, float lineWidth"
  register_function "void vkCmdSetDepthBias"                                                    , "VkCommandBuffer commandBuffer, float depthBiasConstantFactor, float depthBiasClamp, float depthBiasSlopeFactor"
  register_function "void vkCmdSetBlendConstants"                                               , "VkCommandBuffer commandBuffer, const float blendConstants[4]"
  register_function "void vkCmdSetDepthBounds"                                                  , "VkCommandBuffer commandBuffer, float minDepthBounds, float maxDepthBounds"
  register_function "void vkCmdSetStencilCompareMask"                                           , "VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, uint32_t compareMask"
  register_function "void vkCmdSetStencilWriteMask"                                             , "VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, uint32_t writeMask"
  register_function "void vkCmdSetStencilReference"                                             , "VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, uint32_t reference"
  register_function "void vkCmdBindDescriptorSets"                                              , "VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipelineLayout layout, uint32_t firstSet, uint32_t descriptorSetCount, const VkDescriptorSet* pDescriptorSets, uint32_t dynamicOffsetCount, const uint32_t* pDynamicOffsets"
  register_function "void vkCmdBindIndexBuffer"                                                 , "VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkIndexType indexType"
  register_function "void vkCmdBindVertexBuffers"                                               , "VkCommandBuffer commandBuffer, uint32_t firstBinding, uint32_t bindingCount, const VkBuffer* pBuffers, const VkDeviceSize* pOffsets"
  register_function "void vkCmdDraw"                                                            , "VkCommandBuffer commandBuffer, uint32_t vertexCount, uint32_t instanceCount, uint32_t firstVertex, uint32_t firstInstance"
  register_function "void vkCmdDrawIndexed"                                                     , "VkCommandBuffer commandBuffer, uint32_t indexCount, uint32_t instanceCount, uint32_t firstIndex, int32_t vertexOffset, uint32_t firstInstance"
  register_function "void vkCmdDrawMultiEXT"                                                    , "VkCommandBuffer commandBuffer, uint32_t drawCount, const VkMultiDrawInfoEXT* pVertexInfo, uint32_t instanceCount, uint32_t firstInstance, uint32_t stride"
  register_function "void vkCmdDrawMultiIndexedEXT"                                             , "VkCommandBuffer commandBuffer, uint32_t drawCount, const VkMultiDrawIndexedInfoEXT* pIndexInfo, uint32_t instanceCount, uint32_t firstInstance, uint32_t stride, const int32_t* pVertexOffset"
  register_function "void vkCmdDrawIndirect"                                                    , "VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, uint32_t drawCount, uint32_t stride"
  register_function "void vkCmdDrawIndexedIndirect"                                             , "VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, uint32_t drawCount, uint32_t stride"
  register_function "void vkCmdDispatch"                                                        , "VkCommandBuffer commandBuffer, uint32_t groupCountX, uint32_t groupCountY, uint32_t groupCountZ"
  register_function "void vkCmdDispatchIndirect"                                                , "VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset"
  register_function "void vkCmdSubpassShadingHUAWEI"                                            , "VkCommandBuffer commandBuffer"
  register_function "void vkCmdCopyBuffer"                                                      , "VkCommandBuffer commandBuffer, VkBuffer srcBuffer, VkBuffer dstBuffer, uint32_t regionCount, const VkBufferCopy* pRegions"
  register_function "void vkCmdCopyImage"                                                       , "VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage dstImage, VkImageLayout dstImageLayout, uint32_t regionCount, const VkImageCopy* pRegions"
  register_function "void vkCmdBlitImage"                                                       , "VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage dstImage, VkImageLayout dstImageLayout, uint32_t regionCount, const VkImageBlit* pRegions, VkFilter filter"
  register_function "void vkCmdCopyBufferToImage"                                               , "VkCommandBuffer commandBuffer, VkBuffer srcBuffer, VkImage dstImage, VkImageLayout dstImageLayout, uint32_t regionCount, const VkBufferImageCopy* pRegions"
  register_function "void vkCmdCopyImageToBuffer"                                               , "VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkBuffer dstBuffer, uint32_t regionCount, const VkBufferImageCopy* pRegions"
  register_function "void vkCmdUpdateBuffer"                                                    , "VkCommandBuffer commandBuffer, VkBuffer dstBuffer, VkDeviceSize dstOffset, VkDeviceSize dataSize, const void* pData"
  register_function "void vkCmdFillBuffer"                                                      , "VkCommandBuffer commandBuffer, VkBuffer dstBuffer, VkDeviceSize dstOffset, VkDeviceSize size, uint32_t data"
  register_function "void vkCmdClearColorImage"                                                 , "VkCommandBuffer commandBuffer, VkImage image, VkImageLayout imageLayout, const VkClearColorValue* pColor, uint32_t rangeCount, const VkImageSubresourceRange* pRanges"
  register_function "void vkCmdClearDepthStencilImage"                                          , "VkCommandBuffer commandBuffer, VkImage image, VkImageLayout imageLayout, const VkClearDepthStencilValue* pDepthStencil, uint32_t rangeCount, const VkImageSubresourceRange* pRanges"
  register_function "void vkCmdClearAttachments"                                                , "VkCommandBuffer commandBuffer, uint32_t attachmentCount, const VkClearAttachment* pAttachments, uint32_t rectCount, const VkClearRect* pRects"
  register_function "void vkCmdResolveImage"                                                    , "VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage dstImage, VkImageLayout dstImageLayout, uint32_t regionCount, const VkImageResolve* pRegions"
  register_function "void vkCmdSetEvent"                                                        , "VkCommandBuffer commandBuffer, VkEvent event, VkPipelineStageFlags stageMask"
  register_function "void vkCmdResetEvent"                                                      , "VkCommandBuffer commandBuffer, VkEvent event, VkPipelineStageFlags stageMask"
  register_function "void vkCmdWaitEvents"                                                      , "VkCommandBuffer commandBuffer, uint32_t eventCount, const VkEvent* pEvents, VkPipelineStageFlags srcStageMask, VkPipelineStageFlags dstStageMask, uint32_t memoryBarrierCount, const VkMemoryBarrier* pMemoryBarriers, uint32_t bufferMemoryBarrierCount, const VkBufferMemoryBarrier* pBufferMemoryBarriers, uint32_t imageMemoryBarrierCount, const VkImageMemoryBarrier* pImageMemoryBarriers"
  register_function "void vkCmdPipelineBarrier"                                                 , "VkCommandBuffer commandBuffer, VkPipelineStageFlags srcStageMask, VkPipelineStageFlags dstStageMask, VkDependencyFlags dependencyFlags, uint32_t memoryBarrierCount, const VkMemoryBarrier* pMemoryBarriers, uint32_t bufferMemoryBarrierCount, const VkBufferMemoryBarrier* pBufferMemoryBarriers, uint32_t imageMemoryBarrierCount, const VkImageMemoryBarrier* pImageMemoryBarriers"
  register_function "void vkCmdBeginQuery"                                                      , "VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t query, VkQueryControlFlags flags"
  register_function "void vkCmdEndQuery"                                                        , "VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t query"
  register_function "void vkCmdBeginConditionalRenderingEXT"                                    , "VkCommandBuffer commandBuffer, const VkConditionalRenderingBeginInfoEXT* pConditionalRenderingBegin"
  register_function "void vkCmdEndConditionalRenderingEXT"                                      , "VkCommandBuffer commandBuffer"
  register_function "void vkCmdResetQueryPool"                                                  , "VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t firstQuery, uint32_t queryCount"
  register_function "void vkCmdWriteTimestamp"                                                  , "VkCommandBuffer commandBuffer, VkPipelineStageFlagBits pipelineStage, VkQueryPool queryPool, uint32_t query"
  register_function "void vkCmdCopyQueryPoolResults"                                            , "VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t firstQuery, uint32_t queryCount, VkBuffer dstBuffer, VkDeviceSize dstOffset, VkDeviceSize stride, VkQueryResultFlags flags"
  register_function "void vkCmdPushConstants"                                                   , "VkCommandBuffer commandBuffer, VkPipelineLayout layout, VkShaderStageFlags stageFlags, uint32_t offset, uint32_t size, const void* pValues"
  register_function "void vkCmdBeginRenderPass"                                                 , "VkCommandBuffer commandBuffer, const VkRenderPassBeginInfo* pRenderPassBegin, VkSubpassContents contents"
  register_function "void vkCmdNextSubpass"                                                     , "VkCommandBuffer commandBuffer, VkSubpassContents contents"
  register_function "void vkCmdEndRenderPass"                                                   , "VkCommandBuffer commandBuffer"
  register_function "void vkCmdExecuteCommands"                                                 , "VkCommandBuffer commandBuffer, uint32_t commandBufferCount, const VkCommandBuffer* pCommandBuffers"
  register_function "VkResult vkCreateAndroidSurfaceKHR"                                        , "VkInstance instance, const VkAndroidSurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface"
  register_function "VkResult vkGetPhysicalDeviceDisplayPropertiesKHR"                          , "VkPhysicalDevice physicalDevice, uint32_t* pPropertyCount, VkDisplayPropertiesKHR* pProperties"
  register_function "VkResult vkGetPhysicalDeviceDisplayPlanePropertiesKHR"                     , "VkPhysicalDevice physicalDevice, uint32_t* pPropertyCount, VkDisplayPlanePropertiesKHR* pProperties"
  register_function "VkResult vkGetDisplayPlaneSupportedDisplaysKHR"                            , "VkPhysicalDevice physicalDevice, uint32_t planeIndex, uint32_t* pDisplayCount, VkDisplayKHR* pDisplays"
  register_function "VkResult vkGetDisplayModePropertiesKHR"                                    , "VkPhysicalDevice physicalDevice, VkDisplayKHR display, uint32_t* pPropertyCount, VkDisplayModePropertiesKHR* pProperties"
  register_function "VkResult vkCreateDisplayModeKHR"                                           , "VkPhysicalDevice physicalDevice, VkDisplayKHR display, const VkDisplayModeCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDisplayModeKHR* pMode"
  register_function "VkResult vkGetDisplayPlaneCapabilitiesKHR"                                 , "VkPhysicalDevice physicalDevice, VkDisplayModeKHR mode, uint32_t planeIndex, VkDisplayPlaneCapabilitiesKHR* pCapabilities"
  register_function "VkResult vkCreateDisplayPlaneSurfaceKHR"                                   , "VkInstance instance, const VkDisplaySurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface"
  register_function "VkResult vkCreateSharedSwapchainsKHR"                                      , "VkDevice device, uint32_t swapchainCount, const VkSwapchainCreateInfoKHR* pCreateInfos, const VkAllocationCallbacks* pAllocator, VkSwapchainKHR* pSwapchains"
  register_function "void vkDestroySurfaceKHR"                                                  , "VkInstance instance, VkSurfaceKHR surface, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkGetPhysicalDeviceSurfaceSupportKHR"                             , "VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, VkSurfaceKHR surface, VkBool32* pSupported"
  register_function "VkResult vkGetPhysicalDeviceSurfaceCapabilitiesKHR"                        , "VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, VkSurfaceCapabilitiesKHR* pSurfaceCapabilities"
  register_function "VkResult vkGetPhysicalDeviceSurfaceFormatsKHR"                             , "VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, uint32_t* pSurfaceFormatCount, VkSurfaceFormatKHR* pSurfaceFormats"
  register_function "VkResult vkGetPhysicalDeviceSurfacePresentModesKHR"                        , "VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, uint32_t* pPresentModeCount, VkPresentModeKHR* pPresentModes"
  register_function "VkResult vkCreateSwapchainKHR"                                             , "VkDevice device, const VkSwapchainCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSwapchainKHR* pSwapchain"
  register_function "void vkDestroySwapchainKHR"                                                , "VkDevice device, VkSwapchainKHR swapchain, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkGetSwapchainImagesKHR"                                          , "VkDevice device, VkSwapchainKHR swapchain, uint32_t* pSwapchainImageCount, VkImage* pSwapchainImages"
  register_function "VkResult vkAcquireNextImageKHR"                                            , "VkDevice device, VkSwapchainKHR swapchain, uint64_t timeout, VkSemaphore semaphore, VkFence fence, uint32_t* pImageIndex"
  register_function "VkResult vkQueuePresentKHR"                                                , "VkQueue queue, const VkPresentInfoKHR* pPresentInfo"
  register_function "VkResult vkCreateViSurfaceNN"                                              , "VkInstance instance, const VkViSurfaceCreateInfoNN* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface"
  register_function "VkResult vkCreateWaylandSurfaceKHR"                                        , "VkInstance instance, const VkWaylandSurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface"
  register_function "VkBool32 vkGetPhysicalDeviceWaylandPresentationSupportKHR"                 , "VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, struct wl_display* display"
  register_function "VkResult vkCreateWin32SurfaceKHR"                                          , "VkInstance instance, const VkWin32SurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface"
  register_function "VkBool32 vkGetPhysicalDeviceWin32PresentationSupportKHR"                   , "VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex"
  register_function "VkResult vkCreateXlibSurfaceKHR"                                           , "VkInstance instance, const VkXlibSurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface"
  register_function "VkBool32 vkGetPhysicalDeviceXlibPresentationSupportKHR"                    , "VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, Display* dpy, VisualID visualID"
  register_function "VkResult vkCreateXcbSurfaceKHR"                                            , "VkInstance instance, const VkXcbSurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface"
  register_function "VkBool32 vkGetPhysicalDeviceXcbPresentationSupportKHR"                     , "VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, xcb_connection_t* connection, xcb_visualid_t visual_id"
  register_function "VkResult vkCreateDirectFBSurfaceEXT"                                       , "VkInstance instance, const VkDirectFBSurfaceCreateInfoEXT* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface"
  register_function "VkBool32 vkGetPhysicalDeviceDirectFBPresentationSupportEXT"                , "VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, IDirectFB* dfb"
  register_function "VkResult vkCreateImagePipeSurfaceFUCHSIA"                                  , "VkInstance instance, const VkImagePipeSurfaceCreateInfoFUCHSIA* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface"
  register_function "VkResult vkCreateStreamDescriptorSurfaceGGP"                               , "VkInstance instance, const VkStreamDescriptorSurfaceCreateInfoGGP* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface"
  register_function "VkResult vkCreateScreenSurfaceQNX"                                         , "VkInstance instance, const VkScreenSurfaceCreateInfoQNX* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface"
  register_function "VkBool32 vkGetPhysicalDeviceScreenPresentationSupportQNX"                  , "VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, struct _screen_window* window"
  register_function "VkResult vkCreateDebugReportCallbackEXT"                                   , "VkInstance instance, const VkDebugReportCallbackCreateInfoEXT* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDebugReportCallbackEXT* pCallback"
  register_function "void vkDestroyDebugReportCallbackEXT"                                      , "VkInstance instance, VkDebugReportCallbackEXT callback, const VkAllocationCallbacks* pAllocator"
  register_function "void vkDebugReportMessageEXT"                                              , "VkInstance instance, VkDebugReportFlagsEXT flags, VkDebugReportObjectTypeEXT objectType, uint64_t object, size_t location, int32_t messageCode, const char* pLayerPrefix, const char* pMessage"
  register_function "VkResult vkDebugMarkerSetObjectNameEXT"                                    , "VkDevice device, const VkDebugMarkerObjectNameInfoEXT* pNameInfo"
  register_function "VkResult vkDebugMarkerSetObjectTagEXT"                                     , "VkDevice device, const VkDebugMarkerObjectTagInfoEXT* pTagInfo"
  register_function "void vkCmdDebugMarkerBeginEXT"                                             , "VkCommandBuffer commandBuffer, const VkDebugMarkerMarkerInfoEXT* pMarkerInfo"
  register_function "void vkCmdDebugMarkerEndEXT"                                               , "VkCommandBuffer commandBuffer"
  register_function "void vkCmdDebugMarkerInsertEXT"                                            , "VkCommandBuffer commandBuffer, const VkDebugMarkerMarkerInfoEXT* pMarkerInfo"
  register_function "VkResult vkGetPhysicalDeviceExternalImageFormatPropertiesNV"               , "VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkImageTiling tiling, VkImageUsageFlags usage, VkImageCreateFlags flags, VkExternalMemoryHandleTypeFlagsNV externalHandleType, VkExternalImageFormatPropertiesNV* pExternalImageFormatProperties"
  register_function "VkResult vkGetMemoryWin32HandleNV"                                         , "VkDevice device, VkDeviceMemory memory, VkExternalMemoryHandleTypeFlagsNV handleType, HANDLE* pHandle"
  register_function "void vkCmdExecuteGeneratedCommandsNV"                                      , "VkCommandBuffer commandBuffer, VkBool32 isPreprocessed, const VkGeneratedCommandsInfoNV* pGeneratedCommandsInfo"
  register_function "void vkCmdPreprocessGeneratedCommandsNV"                                   , "VkCommandBuffer commandBuffer, const VkGeneratedCommandsInfoNV* pGeneratedCommandsInfo"
  register_function "void vkCmdBindPipelineShaderGroupNV"                                       , "VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipeline pipeline, uint32_t groupIndex"
  register_function "void vkGetGeneratedCommandsMemoryRequirementsNV"                           , "VkDevice device, const VkGeneratedCommandsMemoryRequirementsInfoNV* pInfo, VkMemoryRequirements2* pMemoryRequirements"
  register_function "VkResult vkCreateIndirectCommandsLayoutNV"                                 , "VkDevice device, const VkIndirectCommandsLayoutCreateInfoNV* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkIndirectCommandsLayoutNV* pIndirectCommandsLayout"
  register_function "void vkDestroyIndirectCommandsLayoutNV"                                    , "VkDevice device, VkIndirectCommandsLayoutNV indirectCommandsLayout, const VkAllocationCallbacks* pAllocator"
  register_function "void vkGetPhysicalDeviceFeatures2"                                         , "VkPhysicalDevice physicalDevice, VkPhysicalDeviceFeatures2* pFeatures"
  register_function "void vkGetPhysicalDeviceProperties2"                                       , "VkPhysicalDevice physicalDevice, VkPhysicalDeviceProperties2* pProperties"
  register_function "void vkGetPhysicalDeviceFormatProperties2"                                 , "VkPhysicalDevice physicalDevice, VkFormat format, VkFormatProperties2* pFormatProperties"
  register_function "VkResult vkGetPhysicalDeviceImageFormatProperties2"                        , "VkPhysicalDevice physicalDevice, const VkPhysicalDeviceImageFormatInfo2* pImageFormatInfo, VkImageFormatProperties2* pImageFormatProperties"
  register_function "void vkGetPhysicalDeviceQueueFamilyProperties2"                            , "VkPhysicalDevice physicalDevice, uint32_t* pQueueFamilyPropertyCount, VkQueueFamilyProperties2* pQueueFamilyProperties"
  register_function "void vkGetPhysicalDeviceMemoryProperties2"                                 , "VkPhysicalDevice physicalDevice, VkPhysicalDeviceMemoryProperties2* pMemoryProperties"
  register_function "void vkGetPhysicalDeviceSparseImageFormatProperties2"                      , "VkPhysicalDevice physicalDevice, const VkPhysicalDeviceSparseImageFormatInfo2* pFormatInfo, uint32_t* pPropertyCount, VkSparseImageFormatProperties2* pProperties"
  register_function "void vkCmdPushDescriptorSetKHR"                                            , "VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipelineLayout layout, uint32_t set, uint32_t descriptorWriteCount, const VkWriteDescriptorSet* pDescriptorWrites"
  register_function "void vkTrimCommandPool"                                                    , "VkDevice device, VkCommandPool commandPool, VkCommandPoolTrimFlags flags"
  register_function "void vkGetPhysicalDeviceExternalBufferProperties"                          , "VkPhysicalDevice physicalDevice, const VkPhysicalDeviceExternalBufferInfo* pExternalBufferInfo, VkExternalBufferProperties* pExternalBufferProperties"
  register_function "VkResult vkGetMemoryWin32HandleKHR"                                        , "VkDevice device, const VkMemoryGetWin32HandleInfoKHR* pGetWin32HandleInfo, HANDLE* pHandle"
  register_function "VkResult vkGetMemoryWin32HandlePropertiesKHR"                              , "VkDevice device, VkExternalMemoryHandleTypeFlagBits handleType, HANDLE handle, VkMemoryWin32HandlePropertiesKHR* pMemoryWin32HandleProperties"
  register_function "VkResult vkGetMemoryFdKHR"                                                 , "VkDevice device, const VkMemoryGetFdInfoKHR* pGetFdInfo, int* pFd"
  register_function "VkResult vkGetMemoryFdPropertiesKHR"                                       , "VkDevice device, VkExternalMemoryHandleTypeFlagBits handleType, int fd, VkMemoryFdPropertiesKHR* pMemoryFdProperties"
  register_function "VkResult vkGetMemoryZirconHandleFUCHSIA"                                   , "VkDevice device, const VkMemoryGetZirconHandleInfoFUCHSIA* pGetZirconHandleInfo, zx_handle_t* pZirconHandle"
  register_function "VkResult vkGetMemoryZirconHandlePropertiesFUCHSIA"                         , "VkDevice device, VkExternalMemoryHandleTypeFlagBits handleType, zx_handle_t zirconHandle, VkMemoryZirconHandlePropertiesFUCHSIA* pMemoryZirconHandleProperties"
  register_function "VkResult vkGetMemoryRemoteAddressNV"                                       , "VkDevice device, const VkMemoryGetRemoteAddressInfoNV* pMemoryGetRemoteAddressInfo, VkRemoteAddressNV* pAddress"
  register_function "void vkGetPhysicalDeviceExternalSemaphoreProperties"                       , "VkPhysicalDevice physicalDevice, const VkPhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo, VkExternalSemaphoreProperties* pExternalSemaphoreProperties"
  register_function "VkResult vkGetSemaphoreWin32HandleKHR"                                     , "VkDevice device, const VkSemaphoreGetWin32HandleInfoKHR* pGetWin32HandleInfo, HANDLE* pHandle"
  register_function "VkResult vkImportSemaphoreWin32HandleKHR"                                  , "VkDevice device, const VkImportSemaphoreWin32HandleInfoKHR* pImportSemaphoreWin32HandleInfo"
  register_function "VkResult vkGetSemaphoreFdKHR"                                              , "VkDevice device, const VkSemaphoreGetFdInfoKHR* pGetFdInfo, int* pFd"
  register_function "VkResult vkImportSemaphoreFdKHR"                                           , "VkDevice device, const VkImportSemaphoreFdInfoKHR* pImportSemaphoreFdInfo"
  register_function "VkResult vkGetSemaphoreZirconHandleFUCHSIA"                                , "VkDevice device, const VkSemaphoreGetZirconHandleInfoFUCHSIA* pGetZirconHandleInfo, zx_handle_t* pZirconHandle"
  register_function "VkResult vkImportSemaphoreZirconHandleFUCHSIA"                             , "VkDevice device, const VkImportSemaphoreZirconHandleInfoFUCHSIA* pImportSemaphoreZirconHandleInfo"
  register_function "void vkGetPhysicalDeviceExternalFenceProperties"                           , "VkPhysicalDevice physicalDevice, const VkPhysicalDeviceExternalFenceInfo* pExternalFenceInfo, VkExternalFenceProperties* pExternalFenceProperties"
  register_function "VkResult vkGetFenceWin32HandleKHR"                                         , "VkDevice device, const VkFenceGetWin32HandleInfoKHR* pGetWin32HandleInfo, HANDLE* pHandle"
  register_function "VkResult vkImportFenceWin32HandleKHR"                                      , "VkDevice device, const VkImportFenceWin32HandleInfoKHR* pImportFenceWin32HandleInfo"
  register_function "VkResult vkGetFenceFdKHR"                                                  , "VkDevice device, const VkFenceGetFdInfoKHR* pGetFdInfo, int* pFd"
  register_function "VkResult vkImportFenceFdKHR"                                               , "VkDevice device, const VkImportFenceFdInfoKHR* pImportFenceFdInfo"
  register_function "VkResult vkReleaseDisplayEXT"                                              , "VkPhysicalDevice physicalDevice, VkDisplayKHR display"
  register_function "VkResult vkAcquireXlibDisplayEXT"                                          , "VkPhysicalDevice physicalDevice, Display* dpy, VkDisplayKHR display"
  register_function "VkResult vkGetRandROutputDisplayEXT"                                       , "VkPhysicalDevice physicalDevice, Display* dpy, RROutput rrOutput, VkDisplayKHR* pDisplay"
  register_function "VkResult vkAcquireWinrtDisplayNV"                                          , "VkPhysicalDevice physicalDevice, VkDisplayKHR display"
  register_function "VkResult vkGetWinrtDisplayNV"                                              , "VkPhysicalDevice physicalDevice, uint32_t deviceRelativeId, VkDisplayKHR* pDisplay"
  register_function "VkResult vkDisplayPowerControlEXT"                                         , "VkDevice device, VkDisplayKHR display, const VkDisplayPowerInfoEXT* pDisplayPowerInfo"
  register_function "VkResult vkRegisterDeviceEventEXT"                                         , "VkDevice device, const VkDeviceEventInfoEXT* pDeviceEventInfo, const VkAllocationCallbacks* pAllocator, VkFence* pFence"
  register_function "VkResult vkRegisterDisplayEventEXT"                                        , "VkDevice device, VkDisplayKHR display, const VkDisplayEventInfoEXT* pDisplayEventInfo, const VkAllocationCallbacks* pAllocator, VkFence* pFence"
  register_function "VkResult vkGetSwapchainCounterEXT"                                         , "VkDevice device, VkSwapchainKHR swapchain, VkSurfaceCounterFlagBitsEXT counter, uint64_t* pCounterValue"
  register_function "VkResult vkGetPhysicalDeviceSurfaceCapabilities2EXT"                       , "VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, VkSurfaceCapabilities2EXT* pSurfaceCapabilities"
  register_function "VkResult vkEnumeratePhysicalDeviceGroups"                                  , "VkInstance instance, uint32_t* pPhysicalDeviceGroupCount, VkPhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties"
  register_function "void vkGetDeviceGroupPeerMemoryFeatures"                                   , "VkDevice device, uint32_t heapIndex, uint32_t localDeviceIndex, uint32_t remoteDeviceIndex, VkPeerMemoryFeatureFlags* pPeerMemoryFeatures"
  register_function "VkResult vkBindBufferMemory2"                                              , "VkDevice device, uint32_t bindInfoCount, const VkBindBufferMemoryInfo* pBindInfos"
  register_function "VkResult vkBindImageMemory2"                                               , "VkDevice device, uint32_t bindInfoCount, const VkBindImageMemoryInfo* pBindInfos"
  register_function "void vkCmdSetDeviceMask"                                                   , "VkCommandBuffer commandBuffer, uint32_t deviceMask"
  register_function "VkResult vkGetDeviceGroupPresentCapabilitiesKHR"                           , "VkDevice device, VkDeviceGroupPresentCapabilitiesKHR* pDeviceGroupPresentCapabilities"
  register_function "VkResult vkGetDeviceGroupSurfacePresentModesKHR"                           , "VkDevice device, VkSurfaceKHR surface, VkDeviceGroupPresentModeFlagsKHR* pModes"
  register_function "VkResult vkAcquireNextImage2KHR"                                           , "VkDevice device, const VkAcquireNextImageInfoKHR* pAcquireInfo, uint32_t* pImageIndex"
  register_function "void vkCmdDispatchBase"                                                    , "VkCommandBuffer commandBuffer, uint32_t baseGroupX, uint32_t baseGroupY, uint32_t baseGroupZ, uint32_t groupCountX, uint32_t groupCountY, uint32_t groupCountZ"
  register_function "VkResult vkGetPhysicalDevicePresentRectanglesKHR"                          , "VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, uint32_t* pRectCount, VkRect2D* pRects"
  register_function "VkResult vkCreateDescriptorUpdateTemplate"                                 , "VkDevice device, const VkDescriptorUpdateTemplateCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDescriptorUpdateTemplate* pDescriptorUpdateTemplate"
  register_function "void vkDestroyDescriptorUpdateTemplate"                                    , "VkDevice device, VkDescriptorUpdateTemplate descriptorUpdateTemplate, const VkAllocationCallbacks* pAllocator"
  register_function "void vkUpdateDescriptorSetWithTemplate"                                    , "VkDevice device, VkDescriptorSet descriptorSet, VkDescriptorUpdateTemplate descriptorUpdateTemplate, const void* pData"
  register_function "void vkCmdPushDescriptorSetWithTemplateKHR"                                , "VkCommandBuffer commandBuffer, VkDescriptorUpdateTemplate descriptorUpdateTemplate, VkPipelineLayout layout, uint32_t set, const void* pData"
  register_function "void vkSetHdrMetadataEXT"                                                  , "VkDevice device, uint32_t swapchainCount, const VkSwapchainKHR* pSwapchains, const VkHdrMetadataEXT* pMetadata"
  register_function "VkResult vkGetSwapchainStatusKHR"                                          , "VkDevice device, VkSwapchainKHR swapchain"
  register_function "VkResult vkGetRefreshCycleDurationGOOGLE"                                  , "VkDevice device, VkSwapchainKHR swapchain, VkRefreshCycleDurationGOOGLE* pDisplayTimingProperties"
  register_function "VkResult vkGetPastPresentationTimingGOOGLE"                                , "VkDevice device, VkSwapchainKHR swapchain, uint32_t* pPresentationTimingCount, VkPastPresentationTimingGOOGLE* pPresentationTimings"
  register_function "VkResult vkCreateIOSSurfaceMVK"                                            , "VkInstance instance, const VkIOSSurfaceCreateInfoMVK* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface"
  register_function "VkResult vkCreateMacOSSurfaceMVK"                                          , "VkInstance instance, const VkMacOSSurfaceCreateInfoMVK* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface"
  register_function "VkResult vkCreateMetalSurfaceEXT"                                          , "VkInstance instance, const VkMetalSurfaceCreateInfoEXT* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface"
  register_function "void vkCmdSetViewportWScalingNV"                                           , "VkCommandBuffer commandBuffer, uint32_t firstViewport, uint32_t viewportCount, const VkViewportWScalingNV* pViewportWScalings"
  register_function "void vkCmdSetDiscardRectangleEXT"                                          , "VkCommandBuffer commandBuffer, uint32_t firstDiscardRectangle, uint32_t discardRectangleCount, const VkRect2D* pDiscardRectangles"
  register_function "void vkCmdSetSampleLocationsEXT"                                           , "VkCommandBuffer commandBuffer, const VkSampleLocationsInfoEXT* pSampleLocationsInfo"
  register_function "void vkGetPhysicalDeviceMultisamplePropertiesEXT"                          , "VkPhysicalDevice physicalDevice, VkSampleCountFlagBits samples, VkMultisamplePropertiesEXT* pMultisampleProperties"
  register_function "VkResult vkGetPhysicalDeviceSurfaceCapabilities2KHR"                       , "VkPhysicalDevice physicalDevice, const VkPhysicalDeviceSurfaceInfo2KHR* pSurfaceInfo, VkSurfaceCapabilities2KHR* pSurfaceCapabilities"
  register_function "VkResult vkGetPhysicalDeviceSurfaceFormats2KHR"                            , "VkPhysicalDevice physicalDevice, const VkPhysicalDeviceSurfaceInfo2KHR* pSurfaceInfo, uint32_t* pSurfaceFormatCount, VkSurfaceFormat2KHR* pSurfaceFormats"
  register_function "VkResult vkGetPhysicalDeviceDisplayProperties2KHR"                         , "VkPhysicalDevice physicalDevice, uint32_t* pPropertyCount, VkDisplayProperties2KHR* pProperties"
  register_function "VkResult vkGetPhysicalDeviceDisplayPlaneProperties2KHR"                    , "VkPhysicalDevice physicalDevice, uint32_t* pPropertyCount, VkDisplayPlaneProperties2KHR* pProperties"
  register_function "VkResult vkGetDisplayModeProperties2KHR"                                   , "VkPhysicalDevice physicalDevice, VkDisplayKHR display, uint32_t* pPropertyCount, VkDisplayModeProperties2KHR* pProperties"
  register_function "VkResult vkGetDisplayPlaneCapabilities2KHR"                                , "VkPhysicalDevice physicalDevice, const VkDisplayPlaneInfo2KHR* pDisplayPlaneInfo, VkDisplayPlaneCapabilities2KHR* pCapabilities"
  register_function "void vkGetBufferMemoryRequirements2"                                       , "VkDevice device, const VkBufferMemoryRequirementsInfo2* pInfo, VkMemoryRequirements2* pMemoryRequirements"
  register_function "void vkGetImageMemoryRequirements2"                                        , "VkDevice device, const VkImageMemoryRequirementsInfo2* pInfo, VkMemoryRequirements2* pMemoryRequirements"
  register_function "void vkGetImageSparseMemoryRequirements2"                                  , "VkDevice device, const VkImageSparseMemoryRequirementsInfo2* pInfo, uint32_t* pSparseMemoryRequirementCount, VkSparseImageMemoryRequirements2* pSparseMemoryRequirements"
  register_function "void vkGetDeviceBufferMemoryRequirements"                                  , "VkDevice device, const VkDeviceBufferMemoryRequirements* pInfo, VkMemoryRequirements2* pMemoryRequirements"
  register_function "void vkGetDeviceImageMemoryRequirements"                                   , "VkDevice device, const VkDeviceImageMemoryRequirements* pInfo, VkMemoryRequirements2* pMemoryRequirements"
  register_function "void vkGetDeviceImageSparseMemoryRequirements"                             , "VkDevice device, const VkDeviceImageMemoryRequirements* pInfo, uint32_t* pSparseMemoryRequirementCount, VkSparseImageMemoryRequirements2* pSparseMemoryRequirements"
  register_function "VkResult vkCreateSamplerYcbcrConversion"                                   , "VkDevice device, const VkSamplerYcbcrConversionCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSamplerYcbcrConversion* pYcbcrConversion"
  register_function "void vkDestroySamplerYcbcrConversion"                                      , "VkDevice device, VkSamplerYcbcrConversion ycbcrConversion, const VkAllocationCallbacks* pAllocator"
  register_function "void vkGetDeviceQueue2"                                                    , "VkDevice device, const VkDeviceQueueInfo2* pQueueInfo, VkQueue* pQueue"
  register_function "VkResult vkCreateValidationCacheEXT"                                       , "VkDevice device, const VkValidationCacheCreateInfoEXT* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkValidationCacheEXT* pValidationCache"
  register_function "void vkDestroyValidationCacheEXT"                                          , "VkDevice device, VkValidationCacheEXT validationCache, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkGetValidationCacheDataEXT"                                      , "VkDevice device, VkValidationCacheEXT validationCache, size_t* pDataSize, void* pData"
  register_function "VkResult vkMergeValidationCachesEXT"                                       , "VkDevice device, VkValidationCacheEXT dstCache, uint32_t srcCacheCount, const VkValidationCacheEXT* pSrcCaches"
  register_function "void vkGetDescriptorSetLayoutSupport"                                      , "VkDevice device, const VkDescriptorSetLayoutCreateInfo* pCreateInfo, VkDescriptorSetLayoutSupport* pSupport"
  register_function "VkResult vkGetSwapchainGrallocUsageANDROID"                                , "VkDevice device, VkFormat format, VkImageUsageFlags imageUsage, int* grallocUsage"
  register_function "VkResult vkGetSwapchainGrallocUsage2ANDROID"                               , "VkDevice device, VkFormat format, VkImageUsageFlags imageUsage, VkSwapchainImageUsageFlagsANDROID swapchainImageUsage, uint64_t* grallocConsumerUsage, uint64_t* grallocProducerUsage"
  register_function "VkResult vkAcquireImageANDROID"                                            , "VkDevice device, VkImage image, int nativeFenceFd, VkSemaphore semaphore, VkFence fence"
  register_function "VkResult vkQueueSignalReleaseImageANDROID"                                 , "VkQueue queue, uint32_t waitSemaphoreCount, const VkSemaphore* pWaitSemaphores, VkImage image, int* pNativeFenceFd"
  register_function "VkResult vkGetShaderInfoAMD"                                               , "VkDevice device, VkPipeline pipeline, VkShaderStageFlagBits shaderStage, VkShaderInfoTypeAMD infoType, size_t* pInfoSize, void* pInfo"
  register_function "void vkSetLocalDimmingAMD"                                                 , "VkDevice device, VkSwapchainKHR swapChain, VkBool32 localDimmingEnable"
  register_function "VkResult vkGetPhysicalDeviceCalibrateableTimeDomainsEXT"                   , "VkPhysicalDevice physicalDevice, uint32_t* pTimeDomainCount, VkTimeDomainEXT* pTimeDomains"
  register_function "VkResult vkGetCalibratedTimestampsEXT"                                     , "VkDevice device, uint32_t timestampCount, const VkCalibratedTimestampInfoEXT* pTimestampInfos, uint64_t* pTimestamps, uint64_t* pMaxDeviation"
  register_function "VkResult vkSetDebugUtilsObjectNameEXT"                                     , "VkDevice device, const VkDebugUtilsObjectNameInfoEXT* pNameInfo"
  register_function "VkResult vkSetDebugUtilsObjectTagEXT"                                      , "VkDevice device, const VkDebugUtilsObjectTagInfoEXT* pTagInfo"
  register_function "void vkQueueBeginDebugUtilsLabelEXT"                                       , "VkQueue queue, const VkDebugUtilsLabelEXT* pLabelInfo"
  register_function "void vkQueueEndDebugUtilsLabelEXT"                                         , "VkQueue queue"
  register_function "void vkQueueInsertDebugUtilsLabelEXT"                                      , "VkQueue queue, const VkDebugUtilsLabelEXT* pLabelInfo"
  register_function "void vkCmdBeginDebugUtilsLabelEXT"                                         , "VkCommandBuffer commandBuffer, const VkDebugUtilsLabelEXT* pLabelInfo"
  register_function "void vkCmdEndDebugUtilsLabelEXT"                                           , "VkCommandBuffer commandBuffer"
  register_function "void vkCmdInsertDebugUtilsLabelEXT"                                        , "VkCommandBuffer commandBuffer, const VkDebugUtilsLabelEXT* pLabelInfo"
  register_function "VkResult vkCreateDebugUtilsMessengerEXT"                                   , "VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDebugUtilsMessengerEXT* pMessenger"
  register_function "void vkDestroyDebugUtilsMessengerEXT"                                      , "VkInstance instance, VkDebugUtilsMessengerEXT messenger, const VkAllocationCallbacks* pAllocator"
  register_function "void vkSubmitDebugUtilsMessageEXT"                                         , "VkInstance instance, VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity, VkDebugUtilsMessageTypeFlagsEXT messageTypes, const VkDebugUtilsMessengerCallbackDataEXT* pCallbackData"
  register_function "VkResult vkGetMemoryHostPointerPropertiesEXT"                              , "VkDevice device, VkExternalMemoryHandleTypeFlagBits handleType, const void* pHostPointer, VkMemoryHostPointerPropertiesEXT* pMemoryHostPointerProperties"
  register_function "void vkCmdWriteBufferMarkerAMD"                                            , "VkCommandBuffer commandBuffer, VkPipelineStageFlagBits pipelineStage, VkBuffer dstBuffer, VkDeviceSize dstOffset, uint32_t marker"
  register_function "VkResult vkCreateRenderPass2"                                              , "VkDevice device, const VkRenderPassCreateInfo2* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkRenderPass* pRenderPass"
  register_function "void vkCmdBeginRenderPass2"                                                , "VkCommandBuffer commandBuffer, const VkRenderPassBeginInfo*      pRenderPassBegin, const VkSubpassBeginInfo*      pSubpassBeginInfo"
  register_function "void vkCmdNextSubpass2"                                                    , "VkCommandBuffer commandBuffer, const VkSubpassBeginInfo*      pSubpassBeginInfo, const VkSubpassEndInfo*        pSubpassEndInfo"
  register_function "void vkCmdEndRenderPass2"                                                  , "VkCommandBuffer commandBuffer, const VkSubpassEndInfo*        pSubpassEndInfo"
  register_function "VkResult vkGetSemaphoreCounterValue"                                       , "VkDevice device, VkSemaphore semaphore, uint64_t* pValue"
  register_function "VkResult vkWaitSemaphores"                                                 , "VkDevice device, const VkSemaphoreWaitInfo* pWaitInfo, uint64_t timeout"
  register_function "VkResult vkSignalSemaphore"                                                , "VkDevice device, const VkSemaphoreSignalInfo* pSignalInfo"
  register_function "VkResult vkGetAndroidHardwareBufferPropertiesANDROID"                      , "VkDevice device, const struct AHardwareBuffer* buffer, VkAndroidHardwareBufferPropertiesANDROID* pProperties"
  register_function "VkResult vkGetMemoryAndroidHardwareBufferANDROID"                          , "VkDevice device, const VkMemoryGetAndroidHardwareBufferInfoANDROID* pInfo, struct AHardwareBuffer** pBuffer"
  register_function "void vkCmdDrawIndirectCount"                                               , "VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkBuffer countBuffer, VkDeviceSize countBufferOffset, uint32_t maxDrawCount, uint32_t stride"
  register_function "void vkCmdDrawIndexedIndirectCount"                                        , "VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkBuffer countBuffer, VkDeviceSize countBufferOffset, uint32_t maxDrawCount, uint32_t stride"
  register_function "void vkCmdSetCheckpointNV"                                                 , "VkCommandBuffer commandBuffer, const void* pCheckpointMarker"
  register_function "void vkGetQueueCheckpointDataNV"                                           , "VkQueue queue, uint32_t* pCheckpointDataCount, VkCheckpointDataNV* pCheckpointData"
  register_function "void vkCmdBindTransformFeedbackBuffersEXT"                                 , "VkCommandBuffer commandBuffer, uint32_t firstBinding, uint32_t bindingCount, const VkBuffer* pBuffers, const VkDeviceSize* pOffsets, const VkDeviceSize* pSizes"
  register_function "void vkCmdBeginTransformFeedbackEXT"                                       , "VkCommandBuffer commandBuffer, uint32_t firstCounterBuffer, uint32_t counterBufferCount, const VkBuffer* pCounterBuffers, const VkDeviceSize* pCounterBufferOffsets"
  register_function "void vkCmdEndTransformFeedbackEXT"                                         , "VkCommandBuffer commandBuffer, uint32_t firstCounterBuffer, uint32_t counterBufferCount, const VkBuffer* pCounterBuffers, const VkDeviceSize* pCounterBufferOffsets"
  register_function "void vkCmdBeginQueryIndexedEXT"                                            , "VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t query, VkQueryControlFlags flags, uint32_t index"
  register_function "void vkCmdEndQueryIndexedEXT"                                              , "VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t query, uint32_t index"
  register_function "void vkCmdDrawIndirectByteCountEXT"                                        , "VkCommandBuffer commandBuffer, uint32_t instanceCount, uint32_t firstInstance, VkBuffer counterBuffer, VkDeviceSize counterBufferOffset, uint32_t counterOffset, uint32_t vertexStride"
  register_function "void vkCmdSetExclusiveScissorNV"                                           , "VkCommandBuffer commandBuffer, uint32_t firstExclusiveScissor, uint32_t exclusiveScissorCount, const VkRect2D* pExclusiveScissors"
  register_function "void vkCmdBindShadingRateImageNV"                                          , "VkCommandBuffer commandBuffer, VkImageView imageView, VkImageLayout imageLayout"
  register_function "void vkCmdSetViewportShadingRatePaletteNV"                                 , "VkCommandBuffer commandBuffer, uint32_t firstViewport, uint32_t viewportCount, const VkShadingRatePaletteNV* pShadingRatePalettes"
  register_function "void vkCmdSetCoarseSampleOrderNV"                                          , "VkCommandBuffer commandBuffer, VkCoarseSampleOrderTypeNV sampleOrderType, uint32_t customSampleOrderCount, const VkCoarseSampleOrderCustomNV* pCustomSampleOrders"
  register_function "void vkCmdDrawMeshTasksNV"                                                 , "VkCommandBuffer commandBuffer, uint32_t taskCount, uint32_t firstTask"
  register_function "void vkCmdDrawMeshTasksIndirectNV"                                         , "VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, uint32_t drawCount, uint32_t stride"
  register_function "void vkCmdDrawMeshTasksIndirectCountNV"                                    , "VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkBuffer countBuffer, VkDeviceSize countBufferOffset, uint32_t maxDrawCount, uint32_t stride"
  register_function "VkResult vkCompileDeferredNV"                                              , "VkDevice device, VkPipeline pipeline, uint32_t shader"
  register_function "VkResult vkCreateAccelerationStructureNV"                                  , "VkDevice device, const VkAccelerationStructureCreateInfoNV* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkAccelerationStructureNV* pAccelerationStructure"
  register_function "void vkCmdBindInvocationMaskHUAWEI"                                        , "VkCommandBuffer commandBuffer, VkImageView imageView, VkImageLayout imageLayout"
  register_function "void vkDestroyAccelerationStructureKHR"                                    , "VkDevice device, VkAccelerationStructureKHR accelerationStructure, const VkAllocationCallbacks* pAllocator"
  register_function "void vkDestroyAccelerationStructureNV"                                     , "VkDevice device, VkAccelerationStructureNV accelerationStructure, const VkAllocationCallbacks* pAllocator"
  register_function "void vkGetAccelerationStructureMemoryRequirementsNV"                       , "VkDevice device, const VkAccelerationStructureMemoryRequirementsInfoNV* pInfo, VkMemoryRequirements2KHR* pMemoryRequirements"
  register_function "VkResult vkBindAccelerationStructureMemoryNV"                              , "VkDevice device, uint32_t bindInfoCount, const VkBindAccelerationStructureMemoryInfoNV* pBindInfos"
  register_function "void vkCmdCopyAccelerationStructureNV"                                     , "VkCommandBuffer commandBuffer, VkAccelerationStructureNV dst, VkAccelerationStructureNV src, VkCopyAccelerationStructureModeKHR mode"
  register_function "void vkCmdCopyAccelerationStructureKHR"                                    , "VkCommandBuffer commandBuffer, const VkCopyAccelerationStructureInfoKHR* pInfo"
  register_function "VkResult vkCopyAccelerationStructureKHR"                                   , "VkDevice device, VkDeferredOperationKHR deferredOperation, const VkCopyAccelerationStructureInfoKHR* pInfo"
  register_function "void vkCmdCopyAccelerationStructureToMemoryKHR"                            , "VkCommandBuffer commandBuffer, const VkCopyAccelerationStructureToMemoryInfoKHR* pInfo"
  register_function "VkResult vkCopyAccelerationStructureToMemoryKHR"                           , "VkDevice device, VkDeferredOperationKHR deferredOperation, const VkCopyAccelerationStructureToMemoryInfoKHR* pInfo"
  register_function "void vkCmdCopyMemoryToAccelerationStructureKHR"                            , "VkCommandBuffer commandBuffer, const VkCopyMemoryToAccelerationStructureInfoKHR* pInfo"
  register_function "VkResult vkCopyMemoryToAccelerationStructureKHR"                           , "VkDevice device, VkDeferredOperationKHR deferredOperation, const VkCopyMemoryToAccelerationStructureInfoKHR* pInfo"
  register_function "void vkCmdWriteAccelerationStructuresPropertiesKHR"                        , "VkCommandBuffer commandBuffer, uint32_t accelerationStructureCount, const VkAccelerationStructureKHR* pAccelerationStructures, VkQueryType queryType, VkQueryPool queryPool, uint32_t firstQuery"
  register_function "void vkCmdWriteAccelerationStructuresPropertiesNV"                         , "VkCommandBuffer commandBuffer, uint32_t accelerationStructureCount, const VkAccelerationStructureNV* pAccelerationStructures, VkQueryType queryType, VkQueryPool queryPool, uint32_t firstQuery"
  register_function "void vkCmdBuildAccelerationStructureNV"                                    , "VkCommandBuffer commandBuffer, const VkAccelerationStructureInfoNV* pInfo, VkBuffer instanceData, VkDeviceSize instanceOffset, VkBool32 update, VkAccelerationStructureNV dst, VkAccelerationStructureNV src, VkBuffer scratch, VkDeviceSize scratchOffset"
  register_function "VkResult vkWriteAccelerationStructuresPropertiesKHR"                       , "VkDevice device, uint32_t accelerationStructureCount, const VkAccelerationStructureKHR* pAccelerationStructures, VkQueryType  queryType, size_t       dataSize, void* pData, size_t stride"
  register_function "void vkCmdTraceRaysKHR"                                                    , "VkCommandBuffer commandBuffer, const VkStridedDeviceAddressRegionKHR* pRaygenShaderBindingTable, const VkStridedDeviceAddressRegionKHR* pMissShaderBindingTable, const VkStridedDeviceAddressRegionKHR* pHitShaderBindingTable, const VkStridedDeviceAddressRegionKHR* pCallableShaderBindingTable, uint32_t width, uint32_t height, uint32_t depth"
  register_function "void vkCmdTraceRaysNV"                                                     , "VkCommandBuffer commandBuffer, VkBuffer raygenShaderBindingTableBuffer, VkDeviceSize raygenShaderBindingOffset, VkBuffer missShaderBindingTableBuffer, VkDeviceSize missShaderBindingOffset, VkDeviceSize missShaderBindingStride, VkBuffer hitShaderBindingTableBuffer, VkDeviceSize hitShaderBindingOffset, VkDeviceSize hitShaderBindingStride, VkBuffer callableShaderBindingTableBuffer, VkDeviceSize callableShaderBindingOffset, VkDeviceSize callableShaderBindingStride, uint32_t width, uint32_t height, uint32_t depth"
  register_function "VkResult vkGetRayTracingShaderGroupHandlesKHR"                             , "VkDevice device, VkPipeline pipeline, uint32_t firstGroup, uint32_t groupCount, size_t dataSize, void* pData"
  register_function "VkResult vkGetRayTracingCaptureReplayShaderGroupHandlesKHR"                , "VkDevice device, VkPipeline pipeline, uint32_t firstGroup, uint32_t groupCount, size_t dataSize, void* pData"
  register_function "VkResult vkGetAccelerationStructureHandleNV"                               , "VkDevice device, VkAccelerationStructureNV accelerationStructure, size_t dataSize, void* pData"
  register_function "VkResult vkCreateRayTracingPipelinesNV"                                    , "VkDevice device, VkPipelineCache pipelineCache, uint32_t createInfoCount, const VkRayTracingPipelineCreateInfoNV* pCreateInfos, const VkAllocationCallbacks* pAllocator, VkPipeline* pPipelines"
  register_function "VkResult vkCreateRayTracingPipelinesKHR"                                   , "VkDevice device, VkDeferredOperationKHR deferredOperation, VkPipelineCache pipelineCache, uint32_t createInfoCount, const VkRayTracingPipelineCreateInfoKHR* pCreateInfos, const VkAllocationCallbacks* pAllocator, VkPipeline* pPipelines"
  register_function "VkResult vkGetPhysicalDeviceCooperativeMatrixPropertiesNV"                 , "VkPhysicalDevice physicalDevice, uint32_t* pPropertyCount, VkCooperativeMatrixPropertiesNV* pProperties"
  register_function "void vkCmdTraceRaysIndirectKHR"                                            , "VkCommandBuffer commandBuffer, const VkStridedDeviceAddressRegionKHR* pRaygenShaderBindingTable, const VkStridedDeviceAddressRegionKHR* pMissShaderBindingTable, const VkStridedDeviceAddressRegionKHR* pHitShaderBindingTable, const VkStridedDeviceAddressRegionKHR* pCallableShaderBindingTable, VkDeviceAddress indirectDeviceAddress"
  register_function "void vkGetDeviceAccelerationStructureCompatibilityKHR"                     , "VkDevice device, const VkAccelerationStructureVersionInfoKHR* pVersionInfo, VkAccelerationStructureCompatibilityKHR* pCompatibility"
  register_function "VkDeviceSize vkGetRayTracingShaderGroupStackSizeKHR"                       , "VkDevice device, VkPipeline pipeline, uint32_t group, VkShaderGroupShaderKHR groupShader"
  register_function "void vkCmdSetRayTracingPipelineStackSizeKHR"                               , "VkCommandBuffer commandBuffer, uint32_t pipelineStackSize"
  register_function "uint32_t vkGetImageViewHandleNVX"                                          , "VkDevice device, const VkImageViewHandleInfoNVX* pInfo"
  register_function "VkResult vkGetImageViewAddressNVX"                                         , "VkDevice device, VkImageView imageView, VkImageViewAddressPropertiesNVX* pProperties"
  register_function "VkResult vkGetPhysicalDeviceSurfacePresentModes2EXT"                       , "VkPhysicalDevice physicalDevice, const VkPhysicalDeviceSurfaceInfo2KHR* pSurfaceInfo, uint32_t* pPresentModeCount, VkPresentModeKHR* pPresentModes"
  register_function "VkResult vkGetDeviceGroupSurfacePresentModes2EXT"                          , "VkDevice device, const VkPhysicalDeviceSurfaceInfo2KHR* pSurfaceInfo, VkDeviceGroupPresentModeFlagsKHR* pModes"
  register_function "VkResult vkAcquireFullScreenExclusiveModeEXT"                              , "VkDevice device, VkSwapchainKHR swapchain"
  register_function "VkResult vkReleaseFullScreenExclusiveModeEXT"                              , "VkDevice device, VkSwapchainKHR swapchain"
  register_function "VkResult vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR"  , "VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, uint32_t* pCounterCount, VkPerformanceCounterKHR* pCounters, VkPerformanceCounterDescriptionKHR* pCounterDescriptions"
  register_function "void vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR"              , "VkPhysicalDevice physicalDevice, const VkQueryPoolPerformanceCreateInfoKHR* pPerformanceQueryCreateInfo, uint32_t* pNumPasses"
  register_function "VkResult vkAcquireProfilingLockKHR"                                        , "VkDevice device, const VkAcquireProfilingLockInfoKHR* pInfo"
  register_function "void vkReleaseProfilingLockKHR"                                            , "VkDevice device"
  register_function "VkResult vkGetImageDrmFormatModifierPropertiesEXT"                         , "VkDevice device, VkImage image, VkImageDrmFormatModifierPropertiesEXT* pProperties"
  register_function "uint64_t vkGetBufferOpaqueCaptureAddress"                                  , "VkDevice device, const VkBufferDeviceAddressInfo* pInfo"
  register_function "VkDeviceAddress vkGetBufferDeviceAddress"                                  , "VkDevice device, const VkBufferDeviceAddressInfo* pInfo"
  register_function "VkResult vkCreateHeadlessSurfaceEXT"                                       , "VkInstance instance, const VkHeadlessSurfaceCreateInfoEXT* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface"
  register_function "VkResult vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV", "VkPhysicalDevice physicalDevice, uint32_t* pCombinationCount, VkFramebufferMixedSamplesCombinationNV* pCombinations"
  register_function "VkResult vkInitializePerformanceApiINTEL"                                  , "VkDevice device, const VkInitializePerformanceApiInfoINTEL* pInitializeInfo"
  register_function "void vkUninitializePerformanceApiINTEL"                                    , "VkDevice device"
  register_function "VkResult vkCmdSetPerformanceMarkerINTEL"                                   , "VkCommandBuffer commandBuffer, const VkPerformanceMarkerInfoINTEL* pMarkerInfo"
  register_function "VkResult vkCmdSetPerformanceStreamMarkerINTEL"                             , "VkCommandBuffer commandBuffer, const VkPerformanceStreamMarkerInfoINTEL* pMarkerInfo"
  register_function "VkResult vkCmdSetPerformanceOverrideINTEL"                                 , "VkCommandBuffer commandBuffer, const VkPerformanceOverrideInfoINTEL* pOverrideInfo"
  register_function "VkResult vkAcquirePerformanceConfigurationINTEL"                           , "VkDevice device, const VkPerformanceConfigurationAcquireInfoINTEL* pAcquireInfo, VkPerformanceConfigurationINTEL* pConfiguration"
  register_function "VkResult vkReleasePerformanceConfigurationINTEL"                           , "VkDevice device, VkPerformanceConfigurationINTEL configuration"
  register_function "VkResult vkQueueSetPerformanceConfigurationINTEL"                          , "VkQueue queue, VkPerformanceConfigurationINTEL configuration"
  register_function "VkResult vkGetPerformanceParameterINTEL"                                   , "VkDevice device, VkPerformanceParameterTypeINTEL parameter, VkPerformanceValueINTEL* pValue"
  register_function "uint64_t vkGetDeviceMemoryOpaqueCaptureAddress"                            , "VkDevice device, const VkDeviceMemoryOpaqueCaptureAddressInfo* pInfo"
  register_function "VkResult vkGetPipelineExecutablePropertiesKHR"                             , "VkDevice                        device, const VkPipelineInfoKHR*        pPipelineInfo, uint32_t* pExecutableCount, VkPipelineExecutablePropertiesKHR* pProperties"
  register_function "VkResult vkGetPipelineExecutableStatisticsKHR"                             , "VkDevice                        device, const VkPipelineExecutableInfoKHR*  pExecutableInfo, uint32_t* pStatisticCount, VkPipelineExecutableStatisticKHR* pStatistics"
  register_function "VkResult vkGetPipelineExecutableInternalRepresentationsKHR"                , "VkDevice                        device, const VkPipelineExecutableInfoKHR*  pExecutableInfo, uint32_t* pInternalRepresentationCount, VkPipelineExecutableInternalRepresentationKHR* pInternalRepresentations"
  register_function "void vkCmdSetLineStippleEXT"                                               , "VkCommandBuffer commandBuffer, uint32_t lineStippleFactor, uint16_t lineStipplePattern"
  register_function "VkResult vkGetPhysicalDeviceToolProperties"                                , "VkPhysicalDevice physicalDevice, uint32_t* pToolCount, VkPhysicalDeviceToolProperties* pToolProperties"
  register_function "VkResult vkCreateAccelerationStructureKHR"                                 , "VkDevice                                           device, const VkAccelerationStructureCreateInfoKHR*        pCreateInfo, const VkAllocationCallbacks*       pAllocator, VkAccelerationStructureKHR*                        pAccelerationStructure"
  register_function "void vkCmdBuildAccelerationStructuresKHR"                                  , "VkCommandBuffer                                    commandBuffer, uint32_t infoCount, const VkAccelerationStructureBuildGeometryInfoKHR* pInfos, const VkAccelerationStructureBuildRangeInfoKHR* const* ppBuildRangeInfos"
  register_function "void vkCmdBuildAccelerationStructuresIndirectKHR"                          , "VkCommandBuffer                  commandBuffer, uint32_t                                           infoCount, const VkAccelerationStructureBuildGeometryInfoKHR* pInfos, const VkDeviceAddress*             pIndirectDeviceAddresses, const uint32_t*                    pIndirectStrides, const uint32_t* const*             ppMaxPrimitiveCounts"
  register_function "VkResult vkBuildAccelerationStructuresKHR"                                 , "VkDevice                                           device, VkDeferredOperationKHR deferredOperation, uint32_t infoCount, const VkAccelerationStructureBuildGeometryInfoKHR* pInfos, const VkAccelerationStructureBuildRangeInfoKHR* const* ppBuildRangeInfos"
  register_function "VkDeviceAddress vkGetAccelerationStructureDeviceAddressKHR"                , "VkDevice device, const VkAccelerationStructureDeviceAddressInfoKHR* pInfo"
  register_function "VkResult vkCreateDeferredOperationKHR"                                     , "VkDevice device, const VkAllocationCallbacks* pAllocator, VkDeferredOperationKHR* pDeferredOperation"
  register_function "void vkDestroyDeferredOperationKHR"                                        , "VkDevice device, VkDeferredOperationKHR operation, const VkAllocationCallbacks* pAllocator"
  register_function "uint32_t vkGetDeferredOperationMaxConcurrencyKHR"                          , "VkDevice device, VkDeferredOperationKHR operation"
  register_function "VkResult vkGetDeferredOperationResultKHR"                                  , "VkDevice device, VkDeferredOperationKHR operation"
  register_function "VkResult vkDeferredOperationJoinKHR"                                       , "VkDevice device, VkDeferredOperationKHR operation"
  register_function "void vkCmdSetCullMode"                                                     , "VkCommandBuffer commandBuffer, VkCullModeFlags cullMode"
  register_function "void vkCmdSetFrontFace"                                                    , "VkCommandBuffer commandBuffer, VkFrontFace frontFace"
  register_function "void vkCmdSetPrimitiveTopology"                                            , "VkCommandBuffer commandBuffer, VkPrimitiveTopology primitiveTopology"
  register_function "void vkCmdSetViewportWithCount"                                            , "VkCommandBuffer commandBuffer, uint32_t viewportCount, const VkViewport* pViewports"
  register_function "void vkCmdSetScissorWithCount"                                             , "VkCommandBuffer commandBuffer, uint32_t scissorCount, const VkRect2D* pScissors"
  register_function "void vkCmdBindVertexBuffers2"                                              , "VkCommandBuffer commandBuffer, uint32_t firstBinding, uint32_t bindingCount, const VkBuffer* pBuffers, const VkDeviceSize* pOffsets, const VkDeviceSize* pSizes, const VkDeviceSize* pStrides"
  register_function "void vkCmdSetDepthTestEnable"                                              , "VkCommandBuffer commandBuffer, VkBool32 depthTestEnable"
  register_function "void vkCmdSetDepthWriteEnable"                                             , "VkCommandBuffer commandBuffer, VkBool32 depthWriteEnable"
  register_function "void vkCmdSetDepthCompareOp"                                               , "VkCommandBuffer commandBuffer, VkCompareOp depthCompareOp"
  register_function "void vkCmdSetDepthBoundsTestEnable"                                        , "VkCommandBuffer commandBuffer, VkBool32 depthBoundsTestEnable"
  register_function "void vkCmdSetStencilTestEnable"                                            , "VkCommandBuffer commandBuffer, VkBool32 stencilTestEnable"
  register_function "void vkCmdSetStencilOp"                                                    , "VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, VkStencilOp failOp, VkStencilOp passOp, VkStencilOp depthFailOp, VkCompareOp compareOp"
  register_function "void vkCmdSetPatchControlPointsEXT"                                        , "VkCommandBuffer commandBuffer, uint32_t patchControlPoints"
  register_function "void vkCmdSetRasterizerDiscardEnable"                                      , "VkCommandBuffer commandBuffer, VkBool32 rasterizerDiscardEnable"
  register_function "void vkCmdSetDepthBiasEnable"                                              , "VkCommandBuffer commandBuffer, VkBool32 depthBiasEnable"
  register_function "void vkCmdSetLogicOpEXT"                                                   , "VkCommandBuffer commandBuffer, VkLogicOp logicOp"
  register_function "void vkCmdSetPrimitiveRestartEnable"                                       , "VkCommandBuffer commandBuffer, VkBool32 primitiveRestartEnable"
  register_function "VkResult vkCreatePrivateDataSlot"                                          , "VkDevice device, const VkPrivateDataSlotCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkPrivateDataSlot* pPrivateDataSlot"
  register_function "void vkDestroyPrivateDataSlot"                                             , "VkDevice device, VkPrivateDataSlot privateDataSlot, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkSetPrivateData"                                                 , "VkDevice device, VkObjectType objectType, uint64_t objectHandle, VkPrivateDataSlot privateDataSlot, uint64_t data"
  register_function "void vkGetPrivateData"                                                     , "VkDevice device, VkObjectType objectType, uint64_t objectHandle, VkPrivateDataSlot privateDataSlot, uint64_t* pData"
  register_function "void vkCmdCopyBuffer2"                                                     , "VkCommandBuffer commandBuffer, const VkCopyBufferInfo2* pCopyBufferInfo"
  register_function "void vkCmdCopyImage2"                                                      , "VkCommandBuffer commandBuffer, const VkCopyImageInfo2* pCopyImageInfo"
  register_function "void vkCmdBlitImage2"                                                      , "VkCommandBuffer commandBuffer, const VkBlitImageInfo2* pBlitImageInfo"
  register_function "void vkCmdCopyBufferToImage2"                                              , "VkCommandBuffer commandBuffer, const VkCopyBufferToImageInfo2* pCopyBufferToImageInfo"
  register_function "void vkCmdCopyImageToBuffer2"                                              , "VkCommandBuffer commandBuffer, const VkCopyImageToBufferInfo2* pCopyImageToBufferInfo"
  register_function "void vkCmdResolveImage2"                                                   , "VkCommandBuffer commandBuffer, const VkResolveImageInfo2* pResolveImageInfo"
  register_function "void vkCmdSetFragmentShadingRateKHR"                                       , "VkCommandBuffer           commandBuffer, const VkExtent2D*                           pFragmentSize, const VkFragmentShadingRateCombinerOpKHR    combinerOps[2]"
  register_function "VkResult vkGetPhysicalDeviceFragmentShadingRatesKHR"                       , "VkPhysicalDevice physicalDevice, uint32_t* pFragmentShadingRateCount, VkPhysicalDeviceFragmentShadingRateKHR* pFragmentShadingRates"
  register_function "void vkCmdSetFragmentShadingRateEnumNV"                                    , "VkCommandBuffer           commandBuffer, VkFragmentShadingRateNV                     shadingRate, const VkFragmentShadingRateCombinerOpKHR    combinerOps[2]"
  register_function "void vkGetAccelerationStructureBuildSizesKHR"                              , "VkDevice                                            device, VkAccelerationStructureBuildTypeKHR                 buildType, const VkAccelerationStructureBuildGeometryInfoKHR*  pBuildInfo, const uint32_t*  pMaxPrimitiveCounts, VkAccelerationStructureBuildSizesInfoKHR*           pSizeInfo"
  register_function "void vkCmdSetVertexInputEXT"                                               , "VkCommandBuffer commandBuffer, uint32_t vertexBindingDescriptionCount, const VkVertexInputBindingDescription2EXT* pVertexBindingDescriptions, uint32_t vertexAttributeDescriptionCount, const VkVertexInputAttributeDescription2EXT* pVertexAttributeDescriptions"
  register_function "void                                    vkCmdSetColorWriteEnableEXT"       , "VkCommandBuffer       commandBuffer, uint32_t                                attachmentCount, const VkBool32*   pColorWriteEnables"
  register_function "void vkCmdSetEvent2"                                                       , "VkCommandBuffer                   commandBuffer, VkEvent                                             event, const VkDependencyInfo*                             pDependencyInfo"
  register_function "void vkCmdResetEvent2"                                                     , "VkCommandBuffer                   commandBuffer, VkEvent                                             event, VkPipelineStageFlags2               stageMask"
  register_function "void vkCmdWaitEvents2"                                                     , "VkCommandBuffer                   commandBuffer, uint32_t                                            eventCount, const VkEvent*                     pEvents, const VkDependencyInfo*            pDependencyInfos"
  register_function "void vkCmdPipelineBarrier2"                                                , "VkCommandBuffer                   commandBuffer, const VkDependencyInfo*                             pDependencyInfo"
  register_function "VkResult vkQueueSubmit2"                                                   , "VkQueue                           queue, uint32_t                            submitCount, const VkSubmitInfo2*              pSubmits, VkFence           fence"
  register_function "void vkCmdWriteTimestamp2"                                                 , "VkCommandBuffer                   commandBuffer, VkPipelineStageFlags2               stage, VkQueryPool                                         queryPool, uint32_t                                            query"
  register_function "void vkCmdWriteBufferMarker2AMD"                                           , "VkCommandBuffer                   commandBuffer, VkPipelineStageFlags2               stage, VkBuffer                                            dstBuffer, VkDeviceSize                                        dstOffset, uint32_t                                            marker"
  register_function "void vkGetQueueCheckpointData2NV"                                          , "VkQueue queue, uint32_t* pCheckpointDataCount, VkCheckpointData2NV* pCheckpointData"
  register_function "VkResult vkGetPhysicalDeviceVideoCapabilitiesKHR"                          , "VkPhysicalDevice physicalDevice, const VkVideoProfileKHR* pVideoProfile, VkVideoCapabilitiesKHR* pCapabilities"
  register_function "VkResult vkGetPhysicalDeviceVideoFormatPropertiesKHR"                      , "VkPhysicalDevice physicalDevice, const VkPhysicalDeviceVideoFormatInfoKHR* pVideoFormatInfo, uint32_t* pVideoFormatPropertyCount, VkVideoFormatPropertiesKHR* pVideoFormatProperties"
  register_function "VkResult vkCreateVideoSessionKHR"                                          , "VkDevice device, const VkVideoSessionCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkVideoSessionKHR* pVideoSession"
  register_function "void vkDestroyVideoSessionKHR"                                             , "VkDevice device, VkVideoSessionKHR videoSession, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkCreateVideoSessionParametersKHR"                                , "VkDevice device, const VkVideoSessionParametersCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkVideoSessionParametersKHR* pVideoSessionParameters"
  register_function "VkResult vkUpdateVideoSessionParametersKHR"                                , "VkDevice device, VkVideoSessionParametersKHR videoSessionParameters, const VkVideoSessionParametersUpdateInfoKHR* pUpdateInfo"
  register_function "void vkDestroyVideoSessionParametersKHR"                                   , "VkDevice device, VkVideoSessionParametersKHR videoSessionParameters, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkGetVideoSessionMemoryRequirementsKHR"                           , "VkDevice device, VkVideoSessionKHR videoSession, uint32_t* pVideoSessionMemoryRequirementsCount, VkVideoGetMemoryPropertiesKHR* pVideoSessionMemoryRequirements"
  register_function "VkResult vkBindVideoSessionMemoryKHR"                                      , "VkDevice device, VkVideoSessionKHR videoSession, uint32_t videoSessionBindMemoryCount, const VkVideoBindMemoryKHR* pVideoSessionBindMemories"
  register_function "void vkCmdDecodeVideoKHR"                                                  , "VkCommandBuffer commandBuffer, const VkVideoDecodeInfoKHR* pFrameInfo"
  register_function "void vkCmdBeginVideoCodingKHR"                                             , "VkCommandBuffer commandBuffer, const VkVideoBeginCodingInfoKHR* pBeginInfo"
  register_function "void vkCmdControlVideoCodingKHR"                                           , "VkCommandBuffer commandBuffer, const VkVideoCodingControlInfoKHR* pCodingControlInfo"
  register_function "void vkCmdEndVideoCodingKHR"                                               , "VkCommandBuffer commandBuffer, const VkVideoEndCodingInfoKHR* pEndCodingInfo"
  register_function "void vkCmdEncodeVideoKHR"                                                  , "VkCommandBuffer commandBuffer, const VkVideoEncodeInfoKHR* pEncodeInfo"
  register_function "VkResult vkCreateCuModuleNVX"                                              , "VkDevice device, const VkCuModuleCreateInfoNVX* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkCuModuleNVX* pModule"
  register_function "VkResult vkCreateCuFunctionNVX"                                            , "VkDevice device, const VkCuFunctionCreateInfoNVX* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkCuFunctionNVX* pFunction"
  register_function "void vkDestroyCuModuleNVX"                                                 , "VkDevice device, VkCuModuleNVX module, const VkAllocationCallbacks* pAllocator"
  register_function "void vkDestroyCuFunctionNVX"                                               , "VkDevice device, VkCuFunctionNVX function, const VkAllocationCallbacks* pAllocator"
  register_function "void vkCmdCuLaunchKernelNVX"                                               , "VkCommandBuffer commandBuffer, const VkCuLaunchInfoNVX* pLaunchInfo"
  register_function "void vkSetDeviceMemoryPriorityEXT"                                         , "VkDevice       device, VkDeviceMemory memory, float          priority"
  register_function "VkResult vkAcquireDrmDisplayEXT"                                           , "VkPhysicalDevice physicalDevice, int32_t drmFd, VkDisplayKHR display"
  register_function "VkResult vkGetDrmDisplayEXT"                                               , "VkPhysicalDevice physicalDevice, int32_t drmFd, uint32_t connectorId, VkDisplayKHR* display"
  register_function "VkResult vkWaitForPresentKHR"                                              , "VkDevice device, VkSwapchainKHR swapchain, uint64_t presentId, uint64_t timeout"
  register_function "VkResult vkCreateBufferCollectionFUCHSIA"                                  , "VkDevice device, const VkBufferCollectionCreateInfoFUCHSIA* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkBufferCollectionFUCHSIA* pCollection"
  register_function "VkResult vkSetBufferCollectionBufferConstraintsFUCHSIA"                    , "VkDevice device, VkBufferCollectionFUCHSIA collection, const VkBufferConstraintsInfoFUCHSIA* pBufferConstraintsInfo"
  register_function "VkResult vkSetBufferCollectionImageConstraintsFUCHSIA"                     , "VkDevice device, VkBufferCollectionFUCHSIA collection, const VkImageConstraintsInfoFUCHSIA* pImageConstraintsInfo"
  register_function "void vkDestroyBufferCollectionFUCHSIA"                                     , "VkDevice device, VkBufferCollectionFUCHSIA collection, const VkAllocationCallbacks* pAllocator"
  register_function "VkResult vkGetBufferCollectionPropertiesFUCHSIA"                           , "VkDevice device, VkBufferCollectionFUCHSIA collection, VkBufferCollectionPropertiesFUCHSIA* pProperties"
  register_function "void vkCmdBeginRendering"                                                  , "VkCommandBuffer                   commandBuffer, const VkRenderingInfo*                              pRenderingInfo"
  register_function "void vkCmdEndRendering"                                                    , "VkCommandBuffer                   commandBuffer"
  register_function "void vkGetDescriptorSetLayoutHostMappingInfoVALVE"                         , "VkDevice device, const VkDescriptorSetBindingReferenceVALVE* pBindingReference, VkDescriptorSetLayoutHostMappingInfoVALVE* pHostMapping"
  register_function "void vkGetDescriptorSetHostMappingVALVE"                                   , "VkDevice device, VkDescriptorSet descriptorSet, void** ppData"
end
